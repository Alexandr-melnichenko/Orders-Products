services:
  frontend:
    build:
      context: ./frontend
      target: dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:3000
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      target: dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=10
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=test_task_db
      - FRONTEND_URL=http://frontend:5173
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_task_db
      MYSQL_INITDB_SKIP_TZINFO: 1
    volumes:
      - ./backend/db:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-proot"]
      start_period: 40s
      interval: 5s
      timeout: 10s
      retries: 15
    ports:
      - "3306:3306"
    networks:
      - app-network
    command:
      - --performance-schema=OFF
      - --innodb-buffer-pool-size=128M

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
